<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	">
	
	<!-- 1. Activation of Annotations -->
 	<context:component-scan base-package="com.app"/>
 	<aop:aspectj-autoproxy/>
	<!-- 2. View Resolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>   
	 
	<!-- 3. DMDS, ASFB, HT -->
	
	<!-- It is can be done programmatically -->
	<!-- Data Source Object -->
	
 	<bean 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		name="dsObj"
		p:driverClassName="oracle.jdbc.driver.OracleDriver"
		p:url="jdbc:oracle:thin:@localhost:1521:xe"
		p:username="system"
		p:password="phani"
		/>
		
	<!--  SessionFactory object -->
	<bean class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" name="sfObj">
		<property name="dataSource" ref="dsObj"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.validator.apply_to_ddl">false</prop> 
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.app.model.Document</value>
				<value>com.app.model.Location</value>
				<value>com.app.model.Vendor</value>
				<value>com.app.model.Customer</value>
				<value>com.app.model.Item</value>
				<value>com.app.model.Order</value>
				<value>com.app.model.User</value>
			</list>
		</property>
	</bean>
	
	<!-- Hibernate Template object --> 
	<bean 
		class="org.springframework.orm.hibernate3.HibernateTemplate" 
		name="htObj"
		p:sessionFactory-ref="sfObj"
	/>
 
 	
	<!-- 4. XML View Resolver -->
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location">
			<value>/WEB-INF/spring-views.xml</value>
		</property>
		<property name="order" value="0"/>
	</bean>
	
	<!-- 5. Multipart Resolver code -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		name="multipartResolver"
		p:maxUploadSize="20971520"
		p:maxInMemorySize="10485760"
	/>
	
	<!-- 6.Java MailSender Configuration -->
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl"
		name="mail"
	>
	<!-- 
		Gmail's Default SMTP (simple mail transfer protocal) Settings
	Gmail SMTP server address: smtp.gmail.com
	Gmail SMTP username: Your Gmail address (e.g. example@gmail.com)
	Gmail SMTP password: Your Gmail password
	Gmail SMTP port (TLS): 587
	Gmail SMTP port (SSL): 465
	Gmail SMTP TLS/SSL required: yes -->
		
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="raghavs025@gmail.com"/>
		<property name="password" value="waba12vixo"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
	
</beans>	